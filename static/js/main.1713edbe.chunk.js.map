{"version":3,"sources":["actions/types.js","reducers/coinReducer.js","store.js","tree.svg","components/CryptoList.js","components/NavBar.js","actions/coinActions.js","tracks.svg","components/TrainBorder.js","App.js","index.js"],"names":["SEARCH_COIN","initialState","keyword","recentKeywords","reducer","combineReducers","coinSearch","state","action","type","payload","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","CryptoList","useState","coinList","setCoinList","searchList","setSearchList","useSelector","useEffect","length","console","log","fetchCoinList","result","forEach","coin","id","includes","push","handleSearch","a","axios","get","then","res","data","catch","err","formatName","name","substring","formatNumber","x","toString","replace","className","slice","map","height","alt","src","image","symbol","toUpperCase","current_price","toFixed","Math","sign","price_change_24h","style","color","price_change_percentage_24h","low_24h","high_24h","circulating_supply","numeral","format","market_cap","NavBar","setKeyword","dispatch","useDispatch","Navbar","bg","variant","display","flexDirection","flexWrap","overflow","Brand","href","Nav","Link","Form","onSubmit","e","preventDefault","searchCoin","inline","FormControl","placeholder","onChange","target","value","Button","TrainBorder","tracks","App","logo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1713edbe.chunk.js","sourcesContent":["export const SEARCH_COIN = \"SEARCH_COIN\";\n","import { SEARCH_COIN } from \"../actions/types\";\n\nconst initialState = {\n  keyword: \"\",\n  recentKeywords: [],\n};\n\nexport const coinSearchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // adds search term to state and saves in recent keyword array\n    case SEARCH_COIN:\n      return {\n        ...state,\n        keyword: action.payload,\n        recentKeywords: [...state.recentKeywords, action.payload],\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { coinSearchReducer } from \"./reducers/coinReducer.js\";\n\nconst reducer = combineReducers({\n  coinSearch: coinSearchReducer,\n});\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/tree.512693fd.svg\";","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport numeral from \"numeral\";\n\nconst CryptoList = () => {\n  const [coinList, setCoinList] = useState([]);\n  const [searchList, setSearchList] = useState([]);\n\n  const coinSearch = useSelector((state) => state.coinSearch);\n\n  const { keyword } = coinSearch;\n\n  useEffect(() => {\n    if (coinList && coinList.length > 0) {\n      console.log(\"Coins loaded:\", coinList);\n    } else {\n      fetchCoinList();\n    }\n\n    //Searches through coins for keyword\n    const handleSearch = (keyword) => {\n      console.log(\"searching\");\n      console.log(coinList);\n      let result = [];\n      coinList.forEach((coin) => {\n        if (coin.id.includes(keyword)) {\n          result.push(coin);\n        }\n      });\n      setSearchList(result);\n    };\n\n    if (keyword) {\n      handleSearch(keyword);\n    }\n  }, [coinList, keyword]);\n\n  const fetchCoinList = async () => {\n    console.log(\"fetching coins\");\n    await axios\n      .get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd\")\n      .then((res) => setCoinList(res.data))\n      .catch((err) => console.log(err));\n  };\n\n  const formatName = (name) => {\n    let formattedName;\n    if (name.length > 15) {\n      formattedName = `${name.substring(0, 12)}...`;\n    } else {\n      formattedName = name;\n    }\n    return formattedName;\n  };\n\n  const formatNumber = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  return (\n    <div id=\"crypto-list-div\">\n      <h2>Crypto Tracks</h2>\n      <table className=\"coin-table\">\n        <thead className=\"thead-light\">\n          <tr>\n            <th className=\"image-thead\"></th>\n            <th>Name</th>\n            <th>Symbol</th>\n            <th>Current Price</th>\n            <th>24h Price Change</th>\n            <th>24h % Change</th>\n            <th>24h Low</th>\n            <th>24h High</th>\n            <th>Coins in Circulation</th>\n            <th>Market Cap</th>\n          </tr>\n        </thead>\n        <tbody>\n          {coinList && coinList.length > 10 && !keyword\n            ? coinList.slice(0, 100).map((coin) => (\n                <tr height=\"50px\" className=\"coin-container\" key={coin.id}>\n                  <td className=\"image-container\">\n                    <img\n                      className=\"coin-image\"\n                      alt={coin.name}\n                      src={coin.image}\n                    />\n                  </td>\n                  <td className=\"coin-list-name\">{formatName(coin.name)}</td>\n                  <td className=\"coin-list-symbol\">\n                    {coin.symbol.toUpperCase()}\n                  </td>\n                  <td className=\"coin-list-price\">\n                    ${formatNumber(coin.current_price.toFixed(2))}\n                  </td>\n                  {Math.sign(coin.price_change_24h) > 0 ? (\n                    <td\n                      className=\"coin-list-price-change\"\n                      style={{ color: \"#1c8815\" }}>\n                      ${formatNumber(coin.price_change_24h.toFixed(2))}\n                    </td>\n                  ) : (\n                    <td\n                      className=\"coin-list-price-change\"\n                      style={{ color: \"#c12a2a\" }}>\n                      ${formatNumber(coin.price_change_24h.toFixed(2))}\n                    </td>\n                  )}\n\n                  {Math.sign(coin.price_change_percentage_24h) > 0 ? (\n                    <td\n                      className=\"coin-list-percent-change\"\n                      style={{ color: \"#1c8815\" }}>\n                      {coin.price_change_percentage_24h.toFixed(2)}%\n                    </td>\n                  ) : (\n                    <td\n                      className=\"coin-list-price-change\"\n                      style={{ color: \"#c12a2a\" }}>\n                      {coin.price_change_percentage_24h.toFixed(2)}%\n                    </td>\n                  )}\n                  <td className=\"coin-list-24low\">\n                    ${formatNumber(coin.low_24h.toFixed(2))}\n                  </td>\n                  <td className=\"coin-list-24high\">\n                    ${formatNumber(coin.high_24h.toFixed(2))}\n                  </td>\n                  <td className=\"coin-list-circulation\">\n                    {coin.circulating_supply\n                      ? numeral(coin.circulating_supply)\n                          .format(\"0.0a\")\n                          .toUpperCase()\n                      : \"null\"}\n                  </td>\n                  <td className=\"coin-list-total-volume\">\n                    ${numeral(coin.market_cap).format(\"0.0a\").toUpperCase()}\n                  </td>\n                </tr>\n              ))\n            : searchList.map((coin) => (\n                <tr height=\"50px\" className=\"coin-container\" key={coin.id}>\n                  <td className=\"image-container\">\n                    <img\n                      className=\"coin-image\"\n                      alt={coin.name}\n                      src={coin.image}\n                    />\n                  </td>\n                  <td className=\"coin-list-name\">{formatName(coin.name)}</td>\n                  <td className=\"coin-list-symbol\">\n                    {coin.symbol.toUpperCase()}\n                  </td>\n                  <td className=\"coin-list-price\">\n                    ${formatNumber(coin.current_price.toFixed(2))}\n                  </td>\n                  {Math.sign(coin.price_change_24h) > 0 ? (\n                    <td\n                      className=\"coin-list-price-change\"\n                      style={{ color: \"#1c8815\" }}>\n                      ${formatNumber(coin.price_change_24h.toFixed(2))}\n                    </td>\n                  ) : (\n                    <td\n                      className=\"coin-list-price-change\"\n                      style={{ color: \"#c12a2a\" }}>\n                      ${formatNumber(coin.price_change_24h.toFixed(2))}\n                    </td>\n                  )}\n\n                  {Math.sign(coin.price_change_percentage_24h) > 0 ? (\n                    <td\n                      className=\"coin-list-percent-change\"\n                      style={{ color: \"#1c8815\" }}>\n                      {coin.price_change_percentage_24h.toFixed(2)}%\n                    </td>\n                  ) : (\n                    <td\n                      className=\"coin-list-price-change\"\n                      style={{ color: \"#c12a2a\" }}>\n                      {coin.price_change_percentage_24h.toFixed(2)}%\n                    </td>\n                  )}\n                  <td className=\"coin-list-24low\">\n                    ${formatNumber(coin.low_24h.toFixed(2))}\n                  </td>\n                  <td className=\"coin-list-24high\">\n                    ${formatNumber(coin.high_24h.toFixed(2))}\n                  </td>\n                  <td className=\"coin-list-circulation\">\n                    {coin.circulating_supply\n                      ? numeral(coin.circulating_supply)\n                          .format(\"0.0a\")\n                          .toUpperCase()\n                      : \"null\"}\n                  </td>\n                  <td className=\"coin-list-total-volume\">\n                    ${numeral(coin.market_cap).format(\"0.0a\").toUpperCase()}\n                  </td>\n                </tr>\n              ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default CryptoList;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { searchCoin } from \"../actions/coinActions\";\nimport { Navbar, Nav, Form, FormControl, Button } from \"react-bootstrap\";\n\nconst NavBar = () => {\n  const [keyword, setKeyword] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    console.log(keyword);\n    dispatch(searchCoin(keyword));\n  };\n  return (\n    <Navbar\n      bg=\"primary\"\n      variant=\"dark\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        overflow: \"hidden\",\n      }}>\n      <Navbar.Brand href=\"#home\">Crypto Tracks</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"#home\">Home</Nav.Link>\n        <Nav.Link href=\"#features\">Features</Nav.Link>\n        <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n      </Nav>\n      <Form onSubmit={submitHandler} inline>\n        <FormControl\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"mr-sm-2 search-input\"\n          onChange={(e) => setKeyword(e.target.value)}\n        />\n        <Button type=\"submit\" variant=\"outline-light\">\n          Search\n        </Button>\n      </Form>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import { SEARCH_COIN } from \"./types.js\";\n\nexport const searchCoin = (keyword) => async (dispatch) => {\n  dispatch({\n    type: SEARCH_COIN,\n    payload: keyword,\n  });\n};\n","export default __webpack_public_path__ + \"static/media/tracks.0a43b862.svg\";","import React from \"react\";\nimport tracks from \"../tracks.svg\";\n\nconst TrainBorder = () => {\n  return (\n    <div id=\"traintrack-border\">\n      <img src={tracks} className=\"traintracks\" alt=\"logo\" />\n      <img src={tracks} className=\"traintracks\" alt=\"logo\" />\n      <img src={tracks} className=\"traintracks three\" alt=\"logo\" />\n      <img src={tracks} className=\"traintracks four\" alt=\"logo\" />\n    </div>\n  );\n};\n\nexport default TrainBorder;\n","import logo from \"./tree.svg\";\nimport \"./App.css\";\nimport \"./yeti.bootstrap.min.css\";\n\nimport CryptoList from \"./components/CryptoList\";\nimport NavBar from \"./components/NavBar\";\nimport TrainBorder from \"./components/TrainBorder\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n      <NavBar />\n      <TrainBorder />\n      <CryptoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}